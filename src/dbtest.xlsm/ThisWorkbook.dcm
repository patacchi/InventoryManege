VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ThisWorkbook"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Private Sub Workbook_Open()
    'ブックのディレクトリを調べて、Unicocde文字列が含まれているか判別
    '含まれている場合は警告メッセージを出す
    If isUnicodePath(ThisWorkbook.Path) Then
        'うにこーどありの場合
        MsgBox "保存フォルダ名にUnicode文字列が含まれているので、マクロを無効にします"
        Application.EnableEvents = False
    Else
        'うにこーどなしの場合
        Application.EnableEvents = True
    End If
End Sub
Private Sub Workbook_SheetChange(ByVal ShArg As Object, ByVal Target As Range)
    'ワークシートに値変更あった場合の処理
    '枚数列以外の変化は無視する
    'バーコード入力機種別シートのみ
    'ちょっとまだ試験中
'    Dim nameMaisuu As Name
'    Dim rangeNewTarget As Range     '変更後のTargetを格納
'    Dim rangeOldTarget As Range     '変更前のTargetを格納
'
'    If Not ShArg.Type = xlWorksheet Then
'        Debug.Print ("シート以外が対象だったので何もしないよ")
'        Exit Sub
'    End If
'    '枚数の列かどうかの判別
'    Set nameMaisuu = GetNameRange(constMaisuu_Label, ShArg)
'    If nameMaisuu.RefersToRange.Column < Target.Column Or _
'        nameMaisuu.RefersToRange.Column > (Target.Column + Target.Columns.Count - 1) Then
'        '今回は枚数の列じゃない
'        Exit Sub
'    End If
'    'イベント発生時のTargetを退避
'    Set rangeNewTarget = Target
'    '新データを配列に格納
'    If Not Conversion_Target_To_Array(rangeNewTarget, vararrNewData) Then
'        Debug.Print "Sheet change内、配列格納時に何かあった"
'        Application.EnableEvents = True
'        Application.ScreenUpdating = True
'        Exit Sub
'    End If
'    'イベント発生無限ループ回避
'    Application.EnableEvents = False
'    Application.ScreenUpdating = False
'    'ここから旧データを取りに行く
'    'Undoした後のデータが旧データ
'    Application.Undo
'    Set rangeOldTarget = Target
'    '旧データを配列に格納
'    If Not Conversion_Target_To_Array(rangeOldTarget, vararrOldData) Then
'        Debug.Print "Sheet change内、OldData配列格納時に何かあった"
'        Set Target = rangeNewTarget
'        Application.EnableEvents = True
'        Application.ScreenUpdating = True
'        Exit Sub
'    End If
'    'Targetを変更後に戻す
'    'なぜかもう1回undoすると元に（新しいのに）戻る
'    Application.Undo
'    '新旧データを比較し、Insert、Delete、Update(Delete → Insert）（？）対象に割り振る（ToDo）
'
'    '入力した後は一つ下のセルへ（undo使用しているためここは手動）
'    ActiveCell.offset(Target.Rows.Count, 0).Activate
'    '処理終了後にはお掃除
'    Set vararrOldData = Nothing
'    Set vararrNewData = Nothing
'    Set nameMaisuu = Nothing
'    Application.EnableEvents = True
'    Application.ScreenUpdating = True
End Sub
Private Sub Workbook_SheetSelectionChange(ByVal ShArg As Object, ByVal Target As Range)
    'シートセル選択時（値変更前）に発生するイベント
    '主に変更前データのバックアップに使用する
    'シートの入力をキーにして動かすのは、機種別のバーコード記録シートのみ
    'それ以外はフォームの入力をキーにして動かす
    'この方法だと複数値コピー→単一セル選択貼り付け、の場合に最後の一つしか退避出来てない・・・だめかも
'    Dim nameMaisuu As Name
'
'    If Not TypeName(ShArg) = "Worksheet" Then
'        Debug.Print ("シート以外が対象だったので何もしないよ")
'        Exit Sub
'    End If
'    '今回変化したのがMaisuRangeかどうか調べる
'    '列番号しか見ないよ
'    Set nameMaisuu = GetNameRange(constMaisuu_Label, ShArg)
'    If nameMaisuu.RefersToRange.Column < Target.Column Or _
'        nameMaisuu.RefersToRange.Column > (Target.Column + Target.Columns.Count - 1) Then
'        '今回は枚数の列じゃない
'        Exit Sub
'    End If
'    'イベント発生無限ループ回避
'    Application.EnableEvents = False
'    '旧データのバックアップ
'    If Not Conversion_Target_To_Array(Target, vararrOldData) Then
'        Debug.Print "Sheet selection Change内、データバックアップ時点で何かあった、処理中止"
'        Set vararrOldData = Nothing
'        Application.EnableEvents = True
'        Exit Sub
'    End If
'    'お掃除してイベント有効に
'    Set nameMaisuu = Nothing
'    Application.EnableEvents = True
'
'
End Sub
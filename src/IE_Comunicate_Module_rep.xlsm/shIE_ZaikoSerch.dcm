VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "shIE_ZaikoSerch"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Option Explicit
#If DebugDB Then
    'ローカル環境の時のみ使う定数
    '在庫情報 偽分割 0〜3まで作った
    Const LOCAL_XLS_FILENAME As String = "Zaiko_{0}_Local.xlsx"
    '在庫情報偽分割ファイルの分割最小値と最大値
    Const ZAIKO_LOCAL_SPLIT_MIN As Long = 0
    Const ZAIKO_LOCAL_SPLIT_MAX As Long = 3
#End If
Public Sub btnZaikoSerch_Click()
    '''手配コードを指定して在庫情報シートをDLし、その情報をDictionaryに格納
    '''dicTehaiSh は key に Tehaicode を Value に シートフルパスを入れる
    Dim dicTehaiSh As Dictionary
    Set dicTehaiSh = New Dictionary
    'Local環境と本番環境で対象ファイルの取得方法を変える
#If DebugDB Then
    'ローカルテスト
    MsgBox "DebugDB = 1"
    'DBディレクトリはそのまま
    'ファイルは予め作成してある物を使用
    Dim sqlBC As clsSQLStringBuilder
    Set sqlBC = CreateclsSQLStringBuilder
    Dim dicAppendFormat As Dictionary
    Set dicAppendFormat = New Dictionary
    Dim longZaikoLocalSplitCount As Long
    '各ファイル名に対して処理を実行
    For longZaikoLocalSplitCount = ZAIKO_LOCAL_SPLIT_MIN To ZAIKO_LOCAL_SPLIT_MAX
        '最初にAppendFormat用のdictionaryをクリア
        dicAppendFormat.RemoveAll
        dicAppendFormat.Add 0, CStr(longZaikoLocalSplitCount)
        Dim fsoLocalZaiko As FileSystemObject
        Set fsoLocalZaiko = New FileSystemObject
        Dim adoLocalZaiko As clsADOHandle
        Set adoLocalZaiko = CreateclsADOHandleInstance
        Dim strLocalZaikoFullPath As String
        'Local在庫情報フルパス名取得
        'ディレクトリはclsAdoのデフォルトDBPath、ファイル名は連番のあれ
        strLocalZaikoFullPath = fsoLocalZaiko.BuildPath(adoLocalZaiko.DBPath, sqlBC.ReplaceParm(LOCAL_XLS_FILENAME, dicAppendFormat))
        'ファイル存在確認し、ファイルが存在する場合のみdicTehaiShに追加してやる
        'Local官許の場合は、keyはファイルの偽分割番号を入れる
        If fsoLocalZaiko.FileExists(strLocalZaikoFullPath) Then
            'ファイルが存在する場合
            dicTehaiSh.Add CStr(longZaikoLocalSplitCount), strLocalZaikoFullPath
        End If
    Next longZaikoLocalSplitCount
    '各ファイル（在庫情報）からDBに登録する
    'CommonPartsのclsINVDBにメソッドを追加するのがいいかも
    Dim INVTehaiTest As clsINVDB
    Set INVTehaiTest = CreateclsINVDB
    Dim varKey As Variant
    For Each varKey In dicTehaiSh
        '偽分割ファイルの各ファイルに対して処理を実行する
        '
    Next varKey
#Else
    '本番環境
    '''手配コードを指定して在庫情報シートをDLし、その情報をDictionaryに格納
    '''dicTehaiSh は key に Tehaicode を Value に シートフルパスを入れる
    Dim strTehaiCode As String
    strTehaiCode = CStr(Me.Range("TehaiCode").Value)
    If dicTehaiSh.Exists(strTehaiCode) Then
        '指定の手配コードが既にあった場合
        Exit Sub
    End If
     dicTehaiSh.Add strTehaiCode, modZaikoSerch.ZaikoSerchbyTehaiCode(strTehaiCode)
     Dim INVTehaiTest As clsINVDB
     Set INVTehaiTest = CreateclsINVDB
     Dim strFilteredFileName() As String
     strFilteredFileName = INVTehaiTest.GetFilterRangeNameFromExcel(dicTehaiSh(strTehaiCode))
     If strFilteredFileName(0, 0) <> dicTehaiSh(strTehaiCode) Then
        'フィルタ掛ける前と掛けた後でファイル名が違った場合
        'まずは既存の項目を消去
        dicTehaiSh.Remove (strTehaiCode)
        '次にフィルタ掛かった後のファイル名を新たに追加
        dicTehaiSh.Add strTehaiCode, strFilteredFileName
     End If
     '取得したファイル名でSelect文を作ってみる
     MsgBox "FilterdFileName: " & vbCrLf & dicTehaiSh(strTehaiCode) & vbCrLf & _
     "SQL: " & vbCrLf & "SELECT * FROM " & strFilteredFileName(0, 1)
     Call ShowfrmSQLTest
#End If
End Sub